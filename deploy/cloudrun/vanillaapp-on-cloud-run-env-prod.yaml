# this is me copying from PastaNG copuied in turn from Grotz: https://github.com/cgrotz/blog-examples/blob/main/cloud-deploy-to-cloud-run/run-dev.yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: sku-vanilla-app
  annotations:
    palladi.us/ultimate-answer: 42 # testing custom annotation - it works!
    palladi.us/github-repo: 'github.com:palladius/vanilla-app'
    palladi.us/image-source: 'https://hub.docker.com/r/palladius/vanilla-app'
    palladi.us/random-notes: 'This app should be created/maintained by Skaffold'
spec:
  template:
    spec:
      #serviceAccountName: <service_account>
      containers:
      - image: sku-vanilla-app-image
        env:
        # DEBUG=myapp:*
        # OCCASIONAL_MESSAGE='Running in debug from Makefile'
        # DEPLOY_TARGET='Makefile' LAUNCHING_HOSTNAME=`hostname` npm start
        - name: DEPLOY_TARGET
          value: CLOUD_RUN_ASK_WIETSE
        - name: NODE_ENV
          value: production
        - name: SPEAKER_NAME
          value: Ron Cloody # Cloud Run
        #- name: LAUNCHING_HOSTNAME
        #  value: lets see if i can configure it from CLI..
        - name: RAILS_ENV
          value: useless-since-its-node-js # :)
        - name: OCCASIONAL_MESSAGE
          value: |
            Let's see if it üçÑ funges (Italian for 'works').<br/>
            This is something I tested just 30m ago in VanillaApp.<br/>
            Something i learnt is that ACCESS to this is not regulated from this YAML<br/>
            but instead from the IAM permission you give to the runner (or sth similar).

extends layout


block content
  // pug cheatsheet: https://devhints.io/pug
  h1= title
  h2 #{app_name} #{title} üòè
  //.h3= `${app_name} ${title} üòè - with backquotes IT WORKS!`

  p Welcome to #{title}.
    span 'This code is in here: '
      tt app/views/index.pug
    span and i cant seem to be able to say appname=
      b  #{app_name}
  h2= "ENV vars"
  //p ENV=#{ENV}
  //p OCCASIONAL_MESSAGE=#{OCCASIONAL_MESSAGE}
  - var listOfEnvVars = ["OCCASIONAL_MESSAGE", "TEST_DB_PASS", "HOSTNAME", "LAUNCHING_HOSTNAME", "NODE_ENV", "USER", "env", "PORT", "MY_SECRET_KEY", 'GOOGLE_KEY']
  //- p List of ENV vars:
  //- each item in listOfEnvVars
  //-   li= item
  //-     span =#{process.env.item}
  p with dotenv cos I'm unable to do the rubyist
    tt process.env.send(env_varname)
    span .. so instead I iterate thru dotenv ENV vars and i check if its in my group of friends:
  //- p dotenv #{dotenv}
  //- p dotenvExpand #{dotenvExpand}
  //- p dotenvConfig #{dotenvConfig}
  //- p process.env #{process.env}
  for v,k in process.env
    if listOfEnvVars.includes(k)
      li= k
        span =
        b #{v}

  h2= 'About Express and Pug'
  p Riccardo: when you can continue, continue from here:
    a(href="https://expressjs.com/en/starter/basic-routing.html") üîó expressjs basic routing
    span and
    a(href="https://pugjs.org/language/includes.html") üîó Pug Cheatsheet

  // iteration https://pugjs.org/language/iteration.html

  h3= 'Bubble test'
  div#riccardo_id.bubble Here is your bubble1:
    span.bubble__inner Check it out.<br/>I'm making a speech<br>bubble. TODO(ricc): add ENV var here.
  div.bubble
    span.bubble__inner.
      Testing the dot
      and whatnot.
      with absolute freedome
      over multiple lines.
  //https://devhints.io/pug
  //- <div class="bubble">
  //-   <span class="bubble__inner">
  //-     Check it out.<br>
  //-     I'm making a speech<br>
  //-     bubble.

  //-     TODO(ricc): add ENV var here.
  //-   </span>
  //- </div>

  //- ul
  //- each val in [1, 2, 3, 4, 5]
  //-   li= val

  //- - var list = ["Uno", "Dos", "Tres", "Cuatro", "Cinco", "Seis"]
  //- each item in list
  //-   li= item

